---

- name: start up EC2 - run updates and install packages
  hosts: localhost
  connection: local
  vars:
    user_name: ec2_user
  vars_prompt:
    - name: vnc_password
      prompt: Set your password for VNC connection

  # Run yum updates
  tasks:
    - name: update yum packages
      yum:
        name: '*'
        state: latest
      become: true

    - name: update yum security packages
      yum:
        name: '*'
        security: yes
        state: latest

  # Install Docker
  - name: install docker
    yum:
      name: docker
      state: latest
    become: true

  # Intsall pip
  - name: install pip
    yum:
      name: python-pip
      state: latest
    become: true

  # Install pexpect
  - name: install pexpect module
  ansible.builtin.pip:
    name: pexpect
    version: 3.3
    state: present
  become: true

  # Install MATE Desktop environment
  - name: install MATE
    shell: "amazon-linux-extras install mate-desktop1.x"
    become: true

  - name: define MATE as desktop for all users
    lineinfile:
      path: "/etc/sysconfig/desktop"
      line: "PREFERRED=/usr/bin/mate-session"
      create: yes
      state: latest
    become: true

  # Install Tiger VNC
  - name: install tiger-vnc viewer
    yum:
      name: tigervnc-server
      state: latest
    become: true

  # Configure VNC specified password
  - name: configure vnc specified password
    expect:
      command: vncpasswd
      responses:
        (?i)password: "{{ vnc_password }}"
        (?i)verify: "{{ vnc_password }}"
        (?i)\(y/n\): "n"

  # Restrict VNC network access to localhost
  - name: create tiger-vnc directory
    ansible.builtin.file:
      path: /etc/tigervnc
      state: directory
    become: true

  - name: create mandatory config file containing localhost option
    lineinfile: 
      path: /etc/tigervnc/vncserver-config-mandatory
      line: localhost
      create: yes
    become: true

  # Start VNC server on display number 1
  - name: create new systemd unit
    copy:
      src: /lib/systemd/system/vncserver@.service
      dest: /etc/systemd/system/vncserver@.service
    become: true

  - name: replace all occorunces of USER in new unit with {{ user_name }}
    replace:
      path: /etc/systemd/system/vncserver@.service
      regexp: '<USER>'
      replace: '{{ user_name }}'
    become: true

  - name: start and enable vnc server
    systemd:
      state: restarted
      daemon_reload: yesname: vncserver@.1
      enabled: true
    become: true

  # Install Googel Chrome
  - name: add yum signing key
    ansible.builtin.rpm.key:
      key: https://dl.google.com/linux/linux_signing_key.pub
      state: present
    become: true

  - name: add google-chromerepository into repo.d amazon-linux-extras
    ansible.builtin.yum_repository:
      name: google-chrome
      description: google-chrome repository
      basecurl: http:dl.google.com/linux/chrom/rpm/stable/x84_64
      enabled: true
      gpgcheck: true
      gpgkey: https://dl.google.com/linux/linux_signing_key.pub
    become: true

  - name: install google-chrome-stable
    ansible.builtin.yum:
      name: "google-chrome-stable"
      state: latest
      update_cache: yes
    become: true

  # Install VS Code
  - name: add yum signing key
    ansible.builtin.yum.rpm_key:
      key: https://packages.microsoft.com/keys/microsoft.asc
      state: present
    become: true
  
  - name: add vscode repository into repo.d amazon-linux-extras
    ansible.builtin.yum_repository:
      name: code
      description: vscode repository
      baseurl: https://packages.microsoft.com/yumrepos/vscode
      enabled: true
      gpgcheck: true
      gpgkey: https://packages.microsoft.com/keys/microsoft.asc
    become: true
  
  - name: install vscode
    ansible.builtin.yum:
      name: "code"
      state: latest
      update_cache: yes
    become: true